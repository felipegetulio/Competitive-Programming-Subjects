using namespace std;
#include<bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);
#define ll long long
#define MAXMAT 2

struct Matrix{
    ll mat[MAXMAT][MAXMAT];

    void Identity(){
        for(int i=0; i<MAXMAT; i++)
            for(int j=0; j<MAXMAT; j++)
                mat[i][j] = (i == j);
    }

    Matrix matMult(Matrix b, int mod){
		Matrix ans;
		for(int i=0; i<MAXMAT; i++)
            for(int j=0; j<MAXMAT; j++){
                for(int k = ans.mat[i][j] = 0; k<MAXMAT; k++)
                    ans.mat[i][j] += mat[i][k] * b.mat[k][j];
                ans.mat[i][j] %= mod;
            }
        return ans;
	}

	Matrix matPow(ll e, int m){
        Matrix ans;
        Matrix b = *this;
        ans.Identity();

        for(int i=0; i<2; i++){
            for(int j=0; j<2; j++)
                printf("%lld ", mat[i][j]);
            printf("\n");
        }
        printf("\n");

        while(e){
            if(e&1) ans = ans.matMult(ans, m);
            b = b.matMult(b, m);
            e>>=1;
        }
        return ans;
	}

};

void init(Matrix &base){
	base.mat[0][0] = 1; base.mat[0][1] = 1;
	base.mat[1][0] = 1; base.mat[1][1] = 0;
}

int main(){
    Matrix base;
    ll n;
    int m;
    ll ans;

    while(scanf("%lld %d", &n, &m) != EOF){
        init(base);
        base = base.matPow(n, 1<<m);
        printf("%lld\n", base.mat[0][1]);
    }

    return 0;
}
